{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setMovie","setTitle","error","setError","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","fetch","then","responce","ok","Error","status","statusText","json","getMovie","data","Response","Title","Plot","Poster","imdbID","App","state","some","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c97808a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const searchMovie = () => {\n    getMovie(title)\n      .then((data) => {\n        if (data.Response === 'False') {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n        setError(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', { 'is-danger': error },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://www.omdbapi.com/?apikey=49929d59&t=`;\n\nexport function getMovie(title) {\n  return fetch(`${API_URL}${title}`)\n    .then((responce) => {\n      if (!responce.ok) {\n        throw new Error(`${responce.status} - ${responce.statusText}`);\n      }\n\n      return responce.json();\n    });\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    if (!movie) {\n      return;\n    }\n\n    const existInTheList = movies.some(film => film.imdbId === movie.imdbId);\n\n    if (!existInTheList) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}